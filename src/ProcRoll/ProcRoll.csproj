<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net7.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
  </PropertyGroup>

  <ItemGroup>
    <ProjectReference Include="..\ProcRoll.Process\ProcRoll.Process.csproj" PrivateAssets="All" />
    <ProjectReference Include="..\ProcRoll.Host\ProcRoll.Host.csproj" PrivateAssets="All" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.Extensions.Hosting" Version="7.0.0" />
  </ItemGroup>

  <ItemGroup>
    <None Include="..\..\content\LICENSE">
      <Pack>True</Pack>
      <PackagePath>\</PackagePath>
    </None>
    <None Include="..\..\content\README.nuget.md">
      <Pack>True</Pack>
      <PackagePath>\</PackagePath>
    </None>
  </ItemGroup>

  <PropertyGroup>
    <PackageId>ProcRoll</PackageId>
    <Version>1.0.3</Version>
    <Authors>Brett Lyons</Authors>
    <PackageTags>process;background;service;worker;hosting</PackageTags>
    <PackageLicenseFile>LICENSE</PackageLicenseFile>
    <PackageReadmeFile>README.nuget.md</PackageReadmeFile>
    <RepositoryUrl>https://github.com/ProcRoll/ProcRoll</RepositoryUrl>
    <Description>A simple way to control external processes from your .NET app.</Description>
  </PropertyGroup>

  <!-- Adapted from https://github.com/NuGet/Home/issues/3891#issuecomment-569491001 to include ProjectReference outputs in package. -->
  <PropertyGroup>
    <TargetsForTfmSpecificBuildOutput>$(TargetsForTfmSpecificBuildOutput);CopyProjectReferencesToPackage</TargetsForTfmSpecificBuildOutput>
  </PropertyGroup>

  <Target Name="CopyProjectReferencesToPackage" DependsOnTargets="BuildOnlySettings;ResolveReferences">

    <ItemGroup>
      <_ReferenceCopyLocalPaths Include="@(ReferenceCopyLocalPaths->WithMetadataValue('ReferenceSourceTarget', 'ProjectReference')->WithMetadataValue('PrivateAssets', 'All'))"/>
    </ItemGroup>

    <ItemGroup>
      <BuildOutputInPackage Include="@(_ReferenceCopyLocalPaths)" TargetPath="%(_ReferenceCopyLocalPaths.DestinationSubDirectory)"/>
    </ItemGroup>

  </Target>

</Project>
